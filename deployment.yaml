---
# Source: devault-chart/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: echo-http
  namespace: echo-test
---
# Source: devault-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: echo-http
  labels:
    helm.sh/chart: devault-chart-0.1.0
    app.kubernetes.io/name: devault-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: devault-chart
    app.kubernetes.io/instance: release-name
---
# Source: devault-chart/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-http
  labels:
    helm.sh/chart: devault-chart-0.1.0
    app.kubernetes.io/name: devault-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: devault-chart
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: devault-chart-0.1.0
        app.kubernetes.io/name: devault-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: echo-http
      securityContext:
        {}
      containers:
        - name: devault-chart
          securityContext:
            capabilities:
              drop:
              - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 1000
          image: "docker.io/amdarkentheblack/echo-http-v1.9.0:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {}
